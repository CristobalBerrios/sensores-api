{"version":3,"sources":["../../app/services/index.js"],"names":["createToken","user","payload","sub","_id","iat","unix","exp","add","encode","SECRET","decodeToken","token","decoded","Promise","resolve","reject","decode","status","message","err"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;kBAEe;AACbA,aADa,uBACAC,IADA,EACM;AACjB,QAAMC,UAAU;AACdC,WAAKF,KAAKG,GADI;AAEdC,WAAK,wBAASC,IAAT,EAFS;AAGdC,WAAK,wBAASC,GAAT,CAAa,CAAb,EAAgB,MAAhB,EAAwBF,IAAxB;AAHS,KAAhB;;AAMA,WAAO,oBAAIG,MAAJ,CAAWP,OAAX,EAAoB,eAAOQ,MAA3B,CAAP;AACD,GATY;AAUbC,aAVa,uBAUAC,KAVA,EAUO;AAClB,QAAMC,UAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/C,UAAI;AACF,YAAMd,UAAU,oBAAIe,MAAJ,CAAWL,KAAX,EAAkB,eAAOF,MAAzB,CAAhB;;AAEA,YAAGR,WAAW,wBAASI,IAAT,EAAd,EAA+B;AAC7BU,iBAAO;AACLE,oBAAQ,GADH;AAELC,qBAAS;AAFJ,WAAP;AAID;;AAEDJ,gBAAQb,QAAQC,GAAhB;AACD,OAXD,CAWE,OAAOiB,GAAP,EAAY;AACZJ,eAAO;AACLE,kBAAQ,GADH;AAELC,mBAAS;AAFJ,SAAP;AAID;AACF,KAlBe,CAAhB;;AAoBA,WAAON,OAAP;AACD;AAhCY,C","file":"index.js","sourcesContent":["import {config} from '../config'\nimport moment from 'moment'\nimport jwt from 'jwt-simple'\n\nexport default {\n  createToken (user) {\n    const payload = {\n      sub: user._id,\n      iat: moment().unix(),\n      exp: moment().add(7, 'days').unix()\n    }\n\n    return jwt.encode(payload, config.SECRET)\n  },\n  decodeToken (token) {\n    const decoded = new Promise((resolve, reject) => {\n      try {\n        const payload = jwt.decode(token, config.SECRET)\n\n        if(payload <= moment().unix()) {\n          reject({\n            status: 401,\n            message: 'El token ha expirado'\n          })\n        }\n        \n        resolve(payload.sub)\n      } catch (err) {\n        reject({\n          status: 401,\n          message: 'Token Invalido'\n        })\n      }\n    })\n\n    return decoded\n  }\n}"]}
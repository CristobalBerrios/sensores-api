{"version":3,"sources":["../../app/routes/apiRoutes.js"],"names":["route","Router","post","signIn","use","isAuth","get","getAll","getById","save","put","update","delete","remove"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,QAAQ,kBAAQC,MAAR,EAAd;;AAEA;AACA;AACAD,MAAME,IAAN,CAAW,SAAX,EAAsB,+BAAeC,MAArC;;AAEA;AACAH,MAAMI,GAAN,CAAU,SAAV,EAAqB,eAAKC,MAA1B;AACAL,MAAMM,GAAN,CAAU,SAAV,EAAqB,mCAAiBC,MAAtC;AACAP,MAAMM,GAAN,CAAU,aAAV,EAAyB,mCAAiBE,OAA1C;AACAR,MAAME,IAAN,CAAW,SAAX,EAAsB,mCAAiBO,IAAvC;AACAT,MAAMU,GAAN,CAAU,aAAV,EAAyB,mCAAiBC,MAA1C;AACAX,MAAMY,MAAN,CAAa,aAAb,EAA4B,mCAAiBC,MAA7C;;AAEA;AACAb,MAAMI,GAAN,CAAU,QAAV,EAAoB,eAAKC,MAAzB;AACAL,MAAMM,GAAN,CAAU,QAAV,EAAoB,iCAAgBC,MAApC;AACAP,MAAME,IAAN,CAAW,QAAX,EAAqB,iCAAgBO,IAArC;;AAEA;AACAT,MAAMI,GAAN,CAAU,UAAV,EAAsB,eAAKC,MAA3B;AACAL,MAAMM,GAAN,CAAU,UAAV,EAAsB,qCAAkBC,MAAxC;AACAP,MAAME,IAAN,CAAW,UAAX,EAAuB,qCAAkBO,IAAzC;AACAT,MAAMU,GAAN,CAAU,cAAV,EAA0B,qCAAkBC,MAA5C;AACAX,MAAMY,MAAN,CAAa,cAAb,EAA6B,qCAAkBC,MAA/C;;AAEA;;AAEAb,MAAMI,GAAN,CAAU,aAAV,EAAyB,eAAKC,MAA9B;AACAL,MAAME,IAAN,CAAW,aAAX,EAA0B,2CAAqBO,IAA/C;;kBAEeT,K","file":"apiRoutes.js","sourcesContent":["import express from 'express'\nimport auth from '../middlewares/auth'\nimport {userController} from '../controllers/UserController'\nimport {sensorController} from '../controllers/SensorController'\nimport {eventController} from '../controllers/EventController'\nimport {clusterController} from '../controllers/ClusterController'\nimport {historicalController} from '../controllers/HistoricalController'\n\nconst route = express.Router()\n\n//Login Routes\n// route.post('/signup', userController.signUp)\nroute.post('/signin', userController.signIn)\n\n// Sensor Routes\nroute.use('/sensor', auth.isAuth)\nroute.get('/sensor', sensorController.getAll)\nroute.get('/sensor/:id', sensorController.getById)\nroute.post('/sensor', sensorController.save)\nroute.put('/sensor/:id', sensorController.update)\nroute.delete('/sensor/:id', sensorController.remove)\n\n// Event Routes\nroute.use('/event', auth.isAuth)\nroute.get('/event', eventController.getAll)\nroute.post('/event', eventController.save)\n\n// Cluster Routes\nroute.use('/cluster', auth.isAuth)\nroute.get('/cluster', clusterController.getAll)\nroute.post('/cluster', clusterController.save)\nroute.put('/cluster/:id', clusterController.update)\nroute.delete('/cluster/:id', clusterController.remove)\n\n// Historico Routes\n\nroute.use('/historical', auth.isAuth)\nroute.post('/historical', historicalController.save)\n\nexport default route\n"]}
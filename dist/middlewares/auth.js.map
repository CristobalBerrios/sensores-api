{"version":3,"sources":["../../app/middlewares/auth.js"],"names":["isAuth","req","res","next","headers","authorization","status","send","message","token","decodeToken","then","user","response","catch"],"mappings":";;;;;;AAAA;;;;;;kBAEe;AACbA,QADa,kBACLC,GADK,EACAC,GADA,EACKC,IADL,EACW;AACtB,QAAI,CAACF,IAAIG,OAAJ,CAAYC,aAAjB,EAAgC,OAAOH,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,uBAAV,EAArB,CAAP;AAChC,QAAMC,QAAQR,IAAIG,OAAJ,CAAYC,aAA1B;AACA,uBAASK,WAAT,CAAqBD,KAArB,EAA4BE,IAA5B,CAAiC,oBAAY;AAC3CV,UAAIW,IAAJ,GAAWC,QAAX;AACAV;AACD,KAHD,EAGGW,KAHH,CAGS,oBAAY;AACnBZ,UAAII,MAAJ,CAAWO,SAASP,MAApB,EAA4BC,IAA5B,CAAiC,EAACC,SAASK,SAASL,OAAnB,EAAjC;AACD,KALD;AAMD;AAVY,C","file":"auth.js","sourcesContent":["import services from '../services'\n\nexport default {\n  isAuth (req, res, next) {\n    if (!req.headers.authorization) return res.status(403).send({message: 'No tiene autorizacion'})\n    const token = req.headers.authorization\n    services.decodeToken(token).then(response => {\n      req.user = response\n      next()\n    }).catch(response => {\n      res.status(response.status).send({message: response.message})\n    })\n  }\n}"]}
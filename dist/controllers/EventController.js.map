{"version":3,"sources":["../../app/controllers/EventController.js"],"names":["EventController","req","res","find","sort","exec","err","events","status","send","message","event","body","save","newEvent","fecha","date","sensors","forEach","findByIdAndUpdate","id","$set","last_event","new","eventController"],"mappings":";;;;;;;;;AAAA;;AACA;;;;IAEMA,e;;;;;;;2BAEIC,G,EAAKC,G,EAAK;AAChB,6BAAWC,IAAX,CAAgB,EAAhB,EAAoBC,IAApB,CAAyB,OAAzB,EAAkCC,IAAlC,CAAuC,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACtD,YAAID,GAAJ,EAAS,OAAOJ,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,6BAAV,EAArB,CAAP;AACT,eAAOR,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,MAArB,CAAP;AACD,OAHD;AAID;;;yBAEKN,G,EAAKC,G,EAAK;AACd,UAAIS,QAAQ,2BAAeV,IAAIW,IAAnB,CAAZ;;AAEAD,YAAME,IAAN,CAAW,UAACP,GAAD,EAAMQ,QAAN,EAAmB;AAC5B,YAAIR,GAAJ,EAAS,OAAOJ,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,4BAAV,EAArB,CAAP;AACT,YAAIK,QAAQD,SAASE,IAArB;AACA,YAAIC,UAAUH,SAASG,OAAvB;AACAA,gBAAQC,OAAR,CAAgB,cAAM;AACpB,mCAAYC,iBAAZ,CAA8BC,EAA9B,EAAiC,EAAEC,MAAM,EAACC,YAAYP,KAAb,EAAR,EAAjC,EAA+D,EAACQ,KAAK,IAAN,EAA/D,EAA2E,YAAM,CAAE,CAAnF;AACD,SAFD;AAGA,eAAOrB,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACK,kBAAD,EAArB,CAAP;AACD,OARD;AASD;;;;;;AAGI,IAAMU,4CAAkB,IAAIxB,eAAJ,EAAxB","file":"EventController.js","sourcesContent":["import {eventModel} from '../models/eventModel'\nimport {sensorModel} from '../models/sensorModel'\n\nclass EventController {\n  \n  getAll (req, res) {\n    eventModel.find({}).sort('-date').exec((err, events) => {\n      if (err) return res.status(500).send({message: 'Error al buscar los eventos'})\n      return res.status(200).send(events)\n    })\n  }\n\n  save (req, res) {\n    let event = new eventModel(req.body)\n\n    event.save((err, newEvent) => {\n      if (err) return res.status(500).send({message: 'Error al guardar el evento'})\n      let fecha = newEvent.date\n      let sensors = newEvent.sensors\n      sensors.forEach(id => {\n        sensorModel.findByIdAndUpdate(id,{ $set: {last_event: fecha}}, {new: true},() => {})\n      })\n      return res.status(200).send({newEvent})\n    })\n  }\n}\n\nexport const eventController = new EventController()\n"]}
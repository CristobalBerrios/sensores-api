{"version":3,"sources":["../../app/controllers/HistoricalController.js"],"names":["HistoricalController","req","res","sensors","body","error","forEach","sensor","findByIdAndUpdate","_id","$set","last_connection","Date","now","new","err","mySensor","status","send","message","historicalController"],"mappings":";;;;;;;;;AAAA;;;;IAEMA,oB;;;;;;;yBAEEC,G,EAAKC,G,EAAK;AACd,UAAIC,UAAUF,IAAIG,IAAlB;AACA,UAAIC,QAAQ,KAAZ;AACA,UAAI;AACFF,gBAAQG,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,mCAAYC,iBAAZ,CAA8BD,OAAOE,GAArC,EAAyC,EAAEC,MAAM,EAACC,iBAAiBC,KAAKC,GAAL,EAAlB,EAAR,EAAzC,EAAiF,EAACC,KAAK,IAAN,EAAjF,EAA8F,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC/G,gBAAID,GAAJ,EAASV,QAAQ,IAAR;AACV,WAFD;AAGD,SAJD;AAKA,YAAIA,KAAJ,EAAW,MAAM,uCAAuCU,GAA7C;AACX,eAAOb,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,qCAAV,EAArB,CAAP;AACD,OARD,CAQE,OAAOJ,GAAP,EAAY;AACZ,eAAOb,IAAIe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAASJ,GAAV,EAArB,CAAP;AACD;AAEF;;;;;;AAGI,IAAMK,sDAAuB,IAAIpB,oBAAJ,EAA7B","file":"HistoricalController.js","sourcesContent":["import {sensorModel} from '../models/sensorModel'\n\nclass HistoricalController {\n  \n  save (req, res) {\n    let sensors = req.body\n    let error = false\n    try {\n      sensors.forEach((sensor) => {\n        sensorModel.findByIdAndUpdate(sensor._id,{ $set: {last_connection: Date.now()}}, {new: true}, (err, mySensor) => {\n          if (err) error = true\n        })\n      })\n      if (error) throw 'error al actulizar sensor, error: ' + err\n      return res.status(200).send({message: 'Sensores actualizados correctamente'})\n    } catch (err) {\n      return res.status(500).send({message: err})\n    }\n\n  }\n}\n\nexport const historicalController = new HistoricalController() "]}